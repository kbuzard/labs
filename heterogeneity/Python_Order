This file will document how to install and run the Python Scripts in the RamosRivera folder necessary for this project.
This enviroment is only been created for the G drive in my personal computer. 

## Create a new environment called Test_Jorge on Python:

a) In Anaconda Command Prompt typed:
* conda create --name Test_Jorge python=3.7
* conda activate Test_Jorge

b) Install the packages in Anaconda Command Prompt:
* conda install -c esri arcgis
* conda install -c conda-forge mkl-service
* conda install -c conda-forge plotnine
* conda install -c conda-forge geopandas
* conda install -c conda-forge geopy
* conda install -c conda-forge opencv-python
* conda install -c conda-forge pytesseract
* conda install -c conda-forge pyap
* conda install -c conda-forge tabulate
* conda install -c conda-forge openpyxls (if do not work try "pip install openpyxls")

Note: Every time you need to install a new package, do it in Anaconda Command Prompt.

c) Go to the "Anaconda Navigator" on the Start Menu:

* On Anaconda Navigator go to environment and select "Test_Jorge" 
* Once "Test_Jorge" is installed, go to Home and install "Spyder". If "Spyder" is already installed, then click "Launch".

d) In Spyder, open the script you need. 

Note: If Spyder gets stuck on "connecting to kernel", then close Spyder and do the following:
i) Go to "Environments" in the Anaconda Navigator.
ii) Search for pyzmq
iii) Click on the green tick box and select version 16.0.4
iv) Click on "Apply"
v) Reopen Spyder

Now you have set up your environment. Go to Spyder and run the scripts. 

## Order of the Python Scripts. 

## Diagram for Clarification
 
First, all the python scripts are located in:
G:\MAX-Filer\Collab\Labs-kbuzard-S18\Admin\ramosRivera\T-Burk\Python Scripts

To help understand what we are doing is good to start with the intuition of the procedure. 
First, we are digitalizing the addresses of the labs. 
Second, we are Geocoding those address to be able to locate them in a map using ArcMap. 
Third, we are creating the clusters by running simulations. 
Fourth, we are calculating the agglomerations effects. 

In order to carry out the above four tasks the python scripts should be run in the following order:

###Chain to run:
Pdf2Jpg.py --> OCR.py --> pngwork.py --> Address_ID.py --> state_code_rep.py --> GeoCoder.py -->  field_org.py --> Shapify.py--> K-function Local_3Stage.py--> stat_calc.py
                      


## The following are programs used for tests:
* countSim_speedUp
* countSim_tester
* clust_pat_maker
* multiprocess_test2
* multiprocessing_tester


K function folder:
The only k function file we need to run is "kfunction_3Stage.py" 

This is a descripton of what each other script is doing. Only take it as clarification. 

There is no clarification in Antonio's documentation about what file he is running. There are several python scripts called 3stage_local.py. 
First: I start by looking at the files in the following folder "G: ...\Admin\kfunctions\Three Stage K-functions"

* kfunction_3Stage (12/13/20): Construct functions necessary for 3 Stage Global/Local K-function estimation
* kfunction_3Stage_JIT (10/19/20): Construct functions necessary for 3 Stage Global/Local K-function estimation

kfunction_3Stage_JIT only difference with kfunction_3Stage is that the first uses "from numba import njit". The rest of the code is the same. 


* K-function Local_3Stage (5/8/21): Estimates Local K-function for a vector of distances and simulates a set of point patterns relative/proportional to a given reference measure. Outputs are a set of P-values, K-counts and Buffer Cluster saved to ESRI Shapefiles.
  ** In line 34 its using the following file "...\LabData\cal_lab_fields\PLAS\PLAS.shp". Therefore, it is only using the Plastic industry (looks like). The rest of the code is pretty much the same as "K-function Local_3Stage_JIT"
  
* K-function Local_3Stage_JIT (10/19/20):  Estimates Local K-function for a vector of distances and simulates a set of point patterns relative/proportional to a given reference measure. Outputs are a set of P-values, K-counts and Buffer Cluster saved to ESRI Shapefiles.
  ** I changed line 36 in the code, the folder being called was wrong, I added /Block Data/ to the address. Originally it was "blocks = r"G:\MAX-Filer\Collab\Labs-kbuzard-S18\Admin\Block Level Analysis\CA_Block_New.shp"
  The program run after that, faster than the "K-function Local_3Stage.py"
  



