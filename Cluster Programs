Monday 07/30

I have re-run the SAS code to look at the merge between matching2 and possiblenclass to explain how the program is making the merge between NAs. 
What I have next is the first 17 matched patents after merging matching2 with possiblenclass with all the if conditions. 
The first number correspond to the patent in column "cited". 

5654008 patent in position 9 before the merge its been pared with the control in position 9 possiblenclass
5662124 patent in position 10 before the merge its been pared with the control in position 10 possiblenclass
5709896 patent in position 25 before the merge its been pared with the control in position 25 possiblenclass
5783397 patent in position 50 before the merge its been pared with the control in position 50 possiblenclass
5790639 patent in position 54 before the merge its been pared with the control in position 54 possiblenclass
5821757 patent in position 61 before the merge its been pared with the control in position 61 possiblenclass
5862155 patent in position 77 before the merge its been pared with the control in position 77 possiblenclass
5913164 patent in position 102 before the merge its been pared with the control in position 102 possiblenclass
5922601 patent in position 107 before the merge its been pared with the control in position 107 possiblenclass
5923563 patent in position 108 before the merge its been pared with the control in position 108 possiblenclass
5923999 patent in position 110 before the merge its been pared with the control in position 110 possiblenclass
5929007 patent in position 115 before the merge its been pared with the control in position 115 possiblenclass
5932509 patent in position 117 before the merge its been pared with the control in position 117 possiblenclass
6058127 patent in position 155 before the merge its been pared with the control in position 155 possiblenclass
6122400 patent in position 168 before the merge its been pared with the control in position 168 possiblenclass
6122628 patent in position 169 before the merge its been pared with the control in position 169 possiblenclass
6154475 patent in position 171 before the merge its been pared with the control in position 171 possiblenclass
6496704 patent in position 182 before the merge its been pared with the control in position 182 possiblenclass

After that, it pared the cited patent 6496704 with different controls 70 more times. 
The cited patent 6496704 is the last of the NAs in the matching2 dataset BEFORE the merge. 

Looking at the patents that are not been matched, it's because they don't passed the sasdate condition. 

So, the program is taking the first patent in matching2, running the conditions with the first patent in possiblenclass, 
if they not passed then it drop it and move to the next line. 
It does this until the last patent in matching2 (6496704) and then it uses this one to run the rest of the ones in possiblenclass. 
Possiblenclass is order by nclass only. If I ordered by nclass and control, I expect to get different matchings (its paring by position)





Wednesday 07/25

1) I have review Knitr and the reproducible data in coursera and given that it's implemented in Rstudio, 
the process to use it should be pretty straight forward, the only problem is that we need to have the entire code running, 
knitr will process the code and print the results.
At the moment I haven't begin writing the movement to knitr because I'm still struggling with the optimization of the code.

2) Documentation about the missing values in nclass was unavailable. 
This variable comes in the original datasets from Harvard Dataverse, it is NOT created in the SAS code. 
In my opinion, we could drop the NAs in the code, given that we are mainly grouping by nclass and NAs could mean that we are grouping 
different things (e.g. paring nclass=4 with nclass=400) giving a wrong matching.

3) In the original dataset from Harvard Dataverse you can find the variables Invnum and Invnum_N.
Invnum: Initial inventor number: Patent + Invseq.
Invnum_N: Disambiguated inventor number. This function assign a number to each of the individual inventors, 
this way an inventor with more than one patent will have the same number. 
In the program, we are using Invnum_N, which later itâ€™s rename to Invnum.

4) Regarding the next part, this is a good page for figuring out which distribution or method we are looking for
https://berkorbay.github.io/fe522/02_Monte_Carlo_Simulation.html
Looking the documentation, it said that before choosing a distribution for running the iterations, I need to perform and analysis
on my dataset first. In this page there is a good starting point. 
https://www.epa.gov/sites/production/files/2014-11/documents/montecar.pdf

I need to figure this out before use the Monte Carlo function in R.
This means that, I need to have my merge_patents dataset ready to begin this step. I'm trying to make it work with the small data sets. 

There is a method to calculate the value of Pi using a Monte Carlo, it uses the radius of a circumference and then randomly put dots in
a square of length 1, then it measure how many dots are inside the circumference and how many outside. 
I think this could work in our program, if we take the radius as the 5, 10 or 20 miles of the different clusters. 

5) Regarding the R code. 
I'm looking at this part, creating the t2 vector and replacing as the object in cites_mypatent. When I do this, it doesn't create a matrix, 
of column x row as you mentioned in Frank's code. I have run the code in the small datasets and I don't get any repeating patent in the cited.
I'm not sure if using the vector t2 in the cites_mypatent is the correct thing to do yet.
But if put any additional restriction on the "out" condition the program send warnings of length. 

big_citations <-as.data.table(smallpossiblenclass[,-c(1:9)])

#this changes all NAs in big_citations2 to 0's 
for(j in seq_along(big_citations)){
  set(big_citations, i=which(is.na(big_citations[[j]])), j=j, value=0)
}
#Here we look run the condition that the cite1 to cite 11 are not in cited or in patent
t2 <- which(big_citations[,!(smallmatching2$patent %in% big_citations) & (!(smallmatching2$cited %in% big_citations))])

# Function that returns vector of all rows from big that match 'mypatent,' a list with named elements corresponding to small. 
#(I.e. mypatent will be a row from small)

get_matching_rows <- function(mypatent) {
  
  # Indicator (TRUE/FALSE) for patents from big that cite mypatent 
  cites_mypatent <- unlist(lapply(t2, function(x) mypatent$patent %in% x))

  out <- which((smallpossiblenclass$nclass == mypatent$nclass))
  return(out)
}
For the past few days I've been looking at this part, trying with the rbinds and the data table documentation, 
I'm sorry I have no better news. 



--------------------------------------------------------


Wednesday 13/06/2018

I begin running the SAS programs.

NE Control_1 
I made a copy of the original and I'm working on the file called NE Control_1 JV

I change the name of the directory in the first line to:
G:\MAX-Filer\Research\Labs-kbuzard-S18 
then I run the entire program one step at a time.
Started runing at 10.40 am ended at 10.53 am. If I run the entire program it takes less than 3 minutes. 
I added the Procedure Print the variable citations at the end of the program to see the result.
Correctly print a table. 

After running the whole program step by step, I start checking it by printing some of the variables, 
the program print the tables but it take beetwen 10-15 min per table, if it takes longer than that I cancel the printing. 

The next step should be to transpone the columns so the table looks like the one in the paper we are using.
I assume this is done in the later programs. 

The program has some value that are not referenced in the code. 

Line 124, col 34. I got this message "WARNING: The variable appyear in the DROP, KEEP, or RENAME list has never been reference"
Line 179, col 25. I got this message "WARNING: The variable o_gday in the DROP, KEEP, or RENAME list has never been referenced".
Line 179, col 25. I got this message "WARNING: The variable o_gmonth in the DROP, KEEP, or RENAME list has never been referenced".

Line 190-192 got this message "Input data set is already sorted, no sorting done". 
I don't think it matter much, it just unneccesary. 

Line 195, col 52.  I got this message "Variable o_gday is uninitialized"
Line 195, col 59.  I got this message "Variable o_gmonth is uninitialized"

Line 213-215 got this message "Input data set is already sorted, no sorting done". 

Once the program finish running
I ADDED the last proccess to the code to print the final table "citations". Line 220.
In this table all the variables mantioned in the warnings have inputs (they are not empty).



I begin looking at the second program. NE Control_2_WR_MonthDay_intl_182 
Same as before 
I made a copy of the original and I'm working on the file called NE Control_2_WR_MonthDay_intl_182 JV

I change the name of the directory in the firts line to:
G:\MAX-Filer\Research\Labs-kbuzard-S18 

I run the program one step a time until I reach the 4# matching, after that I run the remaining 16# all together.
The program runs good but there are some warnings in the code.

It takes 8 minutes to run the full code. 
I try printing the last table (I added this proccess) but after 20 mins waiting I cancel the proccess.





